<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
            <section name="AddOn_FE_DIAN.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
            <section name="AddOn_FE_DIAN.Querys" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
        </sectionGroup>
        <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
            <section name="AddOn_FE_DIAN.Querys" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
        </sectionGroup>
    </configSections>
    <system.serviceModel>
      <bindings>
        <basicHttpBinding>
          <binding name="InvoiceServiceImplServiceSoapBinding" maxReceivedMessageSize="2147483647">
            <security mode="Transport" />
          </binding>
          <binding name="InvoiceServiceImplServiceSoapBinding1" />
          <binding name="InterSoapPortBinding">
            <security mode="Transport" />
          </binding>
          <binding name="InterSoapPortBinding1" />
          <binding name="WsEnviarDocumentoPortBinding" />
          <binding name="consultarEstadoSoapBinding">
            <security mode="Transport" />
          </binding>
          <binding name="consultarEstadoSoapBinding1" />
        </basicHttpBinding>
      </bindings>
      <client>
        <endpoint address="https://dpfactura.com.co:443/wsFact_e/InterSoap"
          binding="basicHttpBinding" bindingConfiguration="InterSoapPortBinding"
          contract="WSDispapeles.InterSoap" name="InterSoapPort" />
        <endpoint address="https://wscenflab.cen.biz/isows/InvoiceService"
          binding="basicHttpBinding" bindingConfiguration="InvoiceServiceImplServiceSoapBinding"
          contract="CarvajalWS.invoiceService" name="InvoiceServiceImplPort" />
        <endpoint address="http://enviardocumentos.dispafel.com:80/DFFacturaElectronicaEnviarDocumentos/enviarDocumento"
          binding="basicHttpBinding" bindingConfiguration="WsEnviarDocumentoPortBinding"
          contract="enviarDocumentoDispape.WsEnviarDocumento" name="WsEnviarDocumentoPort" />
        <endpoint address="https://consultarestadofactura.dispafel.com/DFFacturaElectronicaConsultarEstadoFactura/consultarEstado"
          binding="basicHttpBinding" bindingConfiguration="consultarEstadoSoapBinding"
          contract="consultarEstadoDispape.ConsultarEstado" name="ConsultarEstadoPort" />
      </client>
    </system.serviceModel>
    <applicationSettings>
        <AddOn_FE_DIAN.Properties.Settings>
            <setting name="TimerResend" serializeAs="String">
                <value>300000</value>
            </setting>
            <setting name="TimerStatus" serializeAs="String">
                <value>60000</value>
            </setting>
            <setting name="RutaPDF" serializeAs="String">
                <value>C:\\Fac_Electronica\\</value>
            </setting>
            <setting name="AddOn_FE_DIAN_consultarArchivosDispape_consultarArchivos"
                serializeAs="String">
                <value>https://consultarpdfxmlfactura.dispafel.com/DFFacturaElectronicaConsultarPdfXmlFactura/consultarArchivos</value>
            </setting>
        </AddOn_FE_DIAN.Properties.Settings>
        <AddOn_FE_DIAN.Querys>
            <setting name="NotaCredito" serializeAs="String">
                <value />
            </setting>
            <setting name="FacturaVenta" serializeAs="String">
                <value>Select Cadena from (
					Select 0 'LineNum', 1 as 'ordenplano', Cadena from (
					Select 'ENC' + ',' + 'INVOIC' + ',' + 
					Case When CharIndex('-', A2.TaxIdNum) = 0 Then A2.TaxIdNum Else SubString(A2.TaxIdNum, 1, CharIndex('-', A2.TaxIdNum)-1) End + ',' + 
					Case when CharIndex('-', A1.LicTradNum) = 0 Then A1.LicTradNum Else SubString(A1.LicTradNum, 1, CharIndex('-', A1.LicTradNum)-1) End 
					+ ',' + 'UBL 2.0' + ',' + 'DIAN 1.0' + ',' + IsNull(A3.BeginStr,'') + Cast(A0.DocNum as Nvarchar(100)) + ',' + 
					Convert(char(10), A0.DocDate,126) + ',' + Convert(varchar(10), GETDATE(), 108) + ',' + '1' + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + '' + ',' + '' + ',' + 
					'' + ',' + '' + ',' + '' + ',' + Convert(char(10), A0.DocDueDate,126) + ',' + '' + ',' + '' As 'Cadena'
					From OINV A0 
					Inner Join OCRD A1 On A0.CardCode = A1.CardCode 
					Inner Join OADM A2 on 1 = 1 
					Inner join NNM1 A3 On A0.Series = A3.Series
					Where A0.DocEntry = {0} 

					Union All 

					Select 'EMI' + ',' + '1' + ',' + 
					Case When CharIndex('-', A0.TaxIdNum) = 0 Then A0.TaxIdNum Else SubString(A0.TaxIdNum, 1, CharIndex('-', A0.TaxIdNum)-1) End 
					+ ',' + '31' + ',' + '0' + ',' + '' + ',' + A0.PrintHeadr + ',' +
					'' + ',' + '' + ',' + '' + ',' + IsNull(A1.Street,'') + ',' + '' + ',' + '' + ',' + IsNull(A1.City,'') + ',' + 
					IsNull(A1.County,'') + ',' + IsNull(A1.Country,'') + ',' + '' 
					+ ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + ''  As 'Cadena'
					From OADM A0
					Inner Join ADM1 A1 ON A0.Code= A1.Code

					Union All

					Select 'CDE' + ',' + '1' + ',' + IsNull(A0.Manager,'') + ',' + IsNull(A0.Phone1,'') + ',' + IsNull(A0.E_Mail,'') As 'Cadena'
					From OADM A0

					Union All

					Select 'ORC' + ',' + IsNull(Cast(A2.DocNum as Nvarchar(100)),'')  + ',' + '' + ',' + '' + ',' + IsNull(A0.NumAtCard,'') As 'Cadena'
					From OINV A0
					Inner Join INV1 A1 On A0.DocEntry = A1.DocEntry
					Left Join ORDR A2 On A2.DocEntry = A1.BaseEntry
					Where A0.DocEntry = {0}
					Group By A0.NumAtCard, A2.DocNum

					Union All 

					Select 'ADQ' + ',' + Case When A1.U_HBT_TipEnt = '1' Then '2' When A1.U_HBT_TipEnt = '2' Then '1' Else '1' End+ ',' + 
					Case When CharIndex('-', A1.LicTradNum) = 0 Then A1.LicTradNum Else SubString(A1.LicTradNum, 1, CharIndex('-', A1.LicTradNum)-1) End 
					+ ',' + IsNull(A1.U_HBT_TipDoc,'')  + ',' + Case When A1.U_HBT_RegTrib = 'RS' Then '0' When A1.U_HBT_RegTrib = 'RC' Then '2' Else '2' End 
					+ ',' + '' + ',' + Case When A1.U_HBT_TipEnt = '2' Then IsNull(A1.CardName,'') Else '' End + ',' + IsNull(A1.CardName,'') + ',' + 
					Case When A1.U_HBT_TipEnt = '1' Then IsNull(A1.U_HBT_Nombres,'') Else '' End + ',' +
					Case When A1.U_HBT_TipEnt = '1' Then IsNull(A1.U_HBT_Apellido1,'') + ' ' + IsNull(A1.U_HBT_Apellido2,'') Else '' End + ',' + 
					IsNull(A1.Address,'') + ',' + 
					IsNull(A1.State1,'') + ',' + IsNull(A1.U_HBT_MunMed,'') + ',' + IsNull(A1.City,'') + ',' + IsNull(A1.ZipCode,'') + ',' + IsNull(A1.Country,'') + ',' + '' 
					+ ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + ''  As 'Cadena'
					From OINV A0 
					Inner Join OCRD A1 On A0.CardCode = A1.CardCode 
					Where A0.DocEntry = {0}

					Union All 

					Select 'TOT' + ',' + 
					Cast(Cast(Sum(A1.Linetotal) as decimal (14,0)) as Nvarchar(100)) + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 
					Cast(Cast(A0.BaseAmnt as decimal (14,0)) as Nvarchar(100)) + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 
					Cast(Cast(A0.DocTotal as decimal (14,0)) as Nvarchar(100)) + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 
					Cast(Cast(Sum(A1.Linetotal)-A0.DiscSum+A0.VatSum as decimal (14,0)) as Nvarchar(100)) + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 
					Cast(Cast(A0.DiscSum as decimal (14,0)) as Nvarchar(100)) + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 
					Cast(Cast(A0.VatSum as decimal (14,0)) as Nvarchar(100)) + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 
					Cast(Cast(A0.DpmAmnt as decimal (14,0)) as Nvarchar(100)) + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End  As 'Cadena'
					From OINV A0
					Inner Join INV1 A1 On A0.DocEntry = A1.DocEntry
					Where A0.DocEntry = {0}
					Group By A0.DocCur, A0.BaseAmnt, A0.DocTotal, A0.DiscSum, A0.VatSum, A0.DpmAmnt

					Union All

					Select 'TIM' + ',' + 'false' + ',' + 
					Cast(Cast(A0.VatSum as decimal (14,0)) as Nvarchar(100))  + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End As 'Cadena'
					From OINV A0
					Where A0.DocEntry = {0} And IsNull(A0.VatSum ,0) != 0

					Union All

					Select 'IMP' + ',' + '01' + ',' + 
					Cast(Cast(Sum(A0.VatSum) as decimal (14,0)) as Nvarchar(100)) + ',' + 
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' +
					Cast(Cast(Sum(A0.VatSum) as decimal (14,0)) as Nvarchar(100)) + ',' +
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + Cast(Cast(A0.VatPercent as decimal (14,2)) as Nvarchar(100)) As 'Cadena'
					From OINV A0
					Where A0.DocEntry = {0} And IsNull(A0.VatSum ,0) != 0
					Group By A0.DocCur, A0.VatPercent

					Union All

					Select 'TIM' + ',' + 'true' + ',' + 
					Cast(Cast(Sum(A1.WTAmnt) as decimal (14,0)) as Nvarchar(100)) + ',' + 
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End As 'Cadena'
					From OINV A0
					Inner Join INV5 A1 ON A0.DocEntry = A1.AbsEntry 
					Inner Join OWHT A2 On A1.WTCode = A2.WTCode
					Where A2.U_HBT_TipoAutoRet = '1' And IsNull(A1.WTAmnt,0) != 0 And A0.DocEntry = {0}
					Group By A0.DocEntry, A0.DocCur

					Union All

					Select 'IMP' + ',' + '03' + ',' + 
					Cast(Cast(Sum(IsNull(A1.U_Base_ML,0)) as decimal (14,0)) as Nvarchar(100)) + ',' + 
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' +
					Cast(Cast(Sum(IsNull(A1.WTAmnt,0)) as decimal (14,0)) as Nvarchar(100)) + ',' +
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 
					Cast(Cast(IsNull(A1.U_Tarifa,0) as decimal (14,2)) as Nvarchar(100)) As 'Cadena'
					From OINV A0
					Inner Join INV5 A1 ON A0.DocEntry = A1.AbsEntry 
					Inner Join OWHT A2 On A1.WTCode = A2.WTCode
					Where A2.U_HBT_TipoAutoRet = '1' And IsNull(A1.WTAmnt,0) != 0 And A0.DocEntry = {0}
					Group By A0.DocEntry, A0.DocCur, A1.U_Tarifa

					Union All

					Select 'TIM' + ',' + 'true' + ',' + 
					Cast(Cast(Sum(A1.WTAmnt) as decimal (14,0)) as Nvarchar(100)) + ',' + 
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End As 'Cadena'
					From OINV A0
					Inner Join INV5 A1 ON A0.DocEntry = A1.AbsEntry 
					Inner Join OWHT A2 On A1.WTCode = A2.WTCode
					Where A2.U_HBT_TipoAutoRet = '2' And IsNull(A1.WTAmnt,0) != 0 And A0.DocEntry = {0}
					Group By A0.DocEntry, A0.DocCur

					Union All

					Select 'IMP' + ',' + '01' + ',' + 
					Cast(Cast(Sum(A1.U_Base_ML) as decimal (14,0)) as Nvarchar(100)) + ',' + 
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' +
					Cast(Cast(Sum(A1.WTAmnt) as decimal (14,0)) as Nvarchar(100)) + ',' +
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + Cast(Cast(A1.U_Tarifa as decimal (14,2)) as Nvarchar(100)) As 'Cadena'
					From OINV A0
					Inner Join INV5 A1 ON A0.DocEntry = A1.AbsEntry 
					Inner Join OWHT A2 On A1.WTCode = A2.WTCode
					Where A2.U_HBT_TipoAutoRet = '2' And IsNull(A1.WTAmnt,0) != 0 And A0.DocEntry = {0}
					Group By A0.DocEntry, A0.DocCur, A1.U_Tarifa

					Union All

					Select 'DRF' + ',' + '' + ',' + '' + ',' + '' + ',' + IsNull(A1.BeginStr,'') + ',' + 
					Cast(Cast(A1.InitialNum as int) as Nvarchar(100)) + ',' + Cast(Cast(A1.LastNum as int) as Nvarchar(100))
					From OINV A0
					Inner join NNM1 A1 On A0.Series = A1.Series
					Where A0.DocEntry = {0}

					Union All

					Select 
					'NOT,1_ LA PRESENTE FACTURA DE VENTA SE ASIMILA PARA TODOS LOS EFECTOS DE UNA LETRA DE CAMBIO DE CONFORMIDAD CON LOS ARTÍCULOS 770 Y 774 DEL CÓDIGO DEL COMERCIO' + '|' + 
					'DEVOLUCIONES AUTORIZADAS POR EL VENDEDOR PREVIAMENTE OCASIONARAN UNA PENALIZACIÓN DEL 20% SOBRE EL VALOR FACTURADO. ' + '|' +
					'RESOLUCIÓN DIAN No. 123456768 FACTURACIÓN DESDE BIO2300023 HASTA BIO2300999 DE MES, DIA, AÑO' As 'Cadena'
					From OADM A0

					Union All

					Select 
					'NOT,2_ La mercancía viaja por cuenta y riesgo del comprador. El vendedor se reserva el derecho de dominio sobre la mercancía hasta su pago total. Con esta firma el comprador declara haber recibido a satisfacción real y materialmente las mercancías descritas en este documento' As 'Cadena'
					From OADM A0

					Union All

					Select 
					'NOT,4_ SOMOS GRANDES CONTRIBUYENTES RES. 000076 DE DIC 01 DE 2016' + '|' + 
					'SOMOS GRANDES CONTRIBUYENTES SHD RES. DDI-042065 DE OCT DE 2017' + '|' +					
					'ÉSTA FACTURA CAUSARÁ INTERESES MORATORIOS DE ACUERDO A LOS MONTOS AUTORIZADOS POR LA LEY' + '|' + 
					'AUTORETENEDOR RENTA - Resolución #008543 Agosto 13 2009' As 'Cadena'
					From OADM A0

					Union All

					Select 
					'NOT,5_ ACTIVIDAD COMERCIAL 4659 - TARIFA 11.04 x 1000' + '|' + 
					'IVA REGIMEN COMUN - AUTORRETENEDOR RENTA RESOLUCION No. 008543 DE 08/13/09' As 'Cadena'
					From OADM A0

					Union All

					Select 'NOT,6_ ' + A1.SlpName  As 'Cadena'
					From OINV A0
					Inner Join OSLP A1 On A0.SlpCode = A1.SlpCode
					Where A0.DocEntry = {0} And A0.SlpCode != -1

					Union All

					Select 
					'NOT,7_ IVA RÉGIMEN COMÚN' + '|' + A1.IntrntAdrs As 'Cadena'
					From OADM A0
					Inner Join ADM1 A1 ON A0.Code= A1.Code

					Union All

					Select 'NOT,12_ ' + REPLACE(REPLACE(REPLACE(Cast(IsNull(A0.Comments,'') as Nvarchar(max)),CHAR(10),' '),CHAR(13),' '), ',', ';') As 'Cadena'
					From OINV A0
					Inner Join OADM A1 On 1 =1 
					Where A0.DocEntry = {0} And IsNull(A0.Comments,'') != ''


					Union All

					Select 'NOT,14_ ' + A0.LicTradNum + '|' + A1.TaxIdNum As 'Cadena'
					From OINV A0
					Inner Join OADM A1 On 1 =1 
					Where A0.DocEntry = {0}

					Union All

					Select 'OVT' + ',' + '01C' + ',' + Cast(Cast(Sum(A1.WTAmnt) as decimal (14,0)) as Nvarchar(100)) + ',' + 
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + '' + ',' + '' + ',' + '' As 'Cadena'
					From OINV A0
					Inner Join INV5 A1 ON A0.DocEntry = A1.AbsEntry 
					Inner Join OWHT A2 On A1.WTCode = A2.WTCode
					Where A2.U_HBT_TipoAutoRet = '4' And A2.U_HBT_TipRet != '0' And IsNull(A1.WTAmnt,0) != 0 And A0.DocEntry = {0}
					Group By A0.DocEntry, A0.DocCur

					Union All

					Select 'CTS' + ',' + 'BIOT01' + ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + ''
					From OADM
					)T0

					Union All

					Select A1.LineNum, 2 as 'ordenplano', 'ITE' + ',' + Cast(A1.LineNum+1 as Nvarchar(100)) + ',' + 'false' + ',' + 
					Cast(Cast(A1.Quantity as decimal (14,0)) as Nvarchar(100)) + ',' + '' + ',' + 
					Cast(Cast(A1.LineTotal as decimal (14,0)) as Nvarchar(100)) + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 
					Cast(Cast(A1.LineTotal/A1.Quantity as decimal (14,0)) as Nvarchar(100)) + ',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 
					A1.ItemCode  + ',' + '' + ',' + Replace(A1.Dscription,',','.') + ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + 
					'' + ',' + '' + ',' + A1.ItemCode + ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + '' + ',' + '' as 'Cadena'
					From OINV A0 
					Inner Join INV1 A1 On A0.DocEntry = A1.DocEntry 
					Inner Join OITM A2 On A1.ItemCode = A2.ItemCode 
					Where A0.DocEntry = {0}

					Union All

					Select A1.LineNum, 3 as 'ordenplano', 'TII' + ',' + Cast(Cast(A2.TaxSum as decimal (14,0)) as Nvarchar(100)) + ',' + 
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + 'false'
					From OINV A0 
					Inner Join INV1 A1 On A0.DocEntry = A1.DocEntry
					Inner Join INV4 A2 On A1.DocEntry = A2.DocEntry And A1.LineNum = A2.LineNum
					Where A0.DocEntry = {0} And A2.ExpnsCode = -1
					Group By A0.DocEntry, A0.DocCur, A2.TaxSum, A1.LineNum

					Union All

					Select A1.LineNum, 4 as 'ordenplano', 'IIM' + ',' + '01' + ',' + Cast(Cast(A2.TaxSum as decimal (14,0)) as Nvarchar(100)) + ',' + 
					Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + Cast(Cast(A2.BaseSum as decimal (14,0)) as Nvarchar(100)) + 
					',' + Case When A0.DocCur = '$' Then 'COP' Else A0.DocCur End + ',' + Cast(Cast(A2.TaxRate as decimal (14,2)) as Nvarchar(100)) as 'Cadena'
					From OINV A0 
					Inner Join INV1 A1 On A0.DocEntry = A1.DocEntry
					Inner Join INV4 A2 On A1.DocEntry = A2.DocEntry And A1.LineNum = A2.LineNum
					Where A0.DocEntry = {0} And A2.ExpnsCode = -1
					Group By A0.DocEntry, A0.DocCur, A2.BaseSum, A2.TaxRate, A2.TaxSum, A1.LineNum
					)C0 Order by LineNum, ordenplano;</value>
            </setting>
            <setting name="CargueMonitor" serializeAs="String">
                <value>Select 
A0."Code", A0."U_ObjType" as "Tipo Objeto", A0."U_DocType" as "Tipo Documento", A1."Name" as "Documento DIAN", A0."U_Folio" as "Numero Documento", A0."U_Prefijo" as "Prefijo", A0."U_DocNum" as "Numero Interno", 
A0."U_Status" as "Codigo Estado", A0."U_Resultado" as "Descripcion Estado", A0."U_ProcessID" as "ID Proceso", 
A0."U_Fecha_Envio" as "Fecha de contabilizacion", A0."U_Hora_Envio" as "Hora de creacion", A0."U_Usuario_Envio" as "Usuario Envio", 
A0."U_Det_Peticion" as "Detalle Peticion", A0."U_Respuesta_Int" as "Respuesta Integracion", A0."U_Archivo_PDF" as "Archivo PDF", A0."U_Enlace_XML" as "Archivo XML",
A0."U_ID_Seguimiento" as "FebosID"
From "@FEDIAN_MONITORLOG" A0
Left Join "@FEDIAN_CODDOC" A1 On A0."U_DocType" = A1."Code"
Where (A0."U_Fecha_Envio" Between '{0}' and '{1}' or IsNull(A0."U_Fecha_Envio",'') = '') and (A0."U_DocType" = '{2}' OR IsNull('{2}','')='') and (A0."U_Status" = '{3}' OR IsNull('{3}','')='')
Order By Cast(A0."Code" as int)</value>
            </setting>
            <setting name="PARAMG" serializeAs="String">
                <value>Select * from "@FEDIAN_PARAMG"</value>
            </setting>
            <setting name="GetCodeLog" serializeAs="String">
                <value>Select "Code" From "@FEDIAN_MONITORLOG" Where "U_DocNum" = {0}</value>
            </setting>
            <setting name="ProcessStatus" serializeAs="String">
                <value>Select "Code", "U_ProcessID", "U_ID_Seguimiento", "U_Det_Peticion" 
					From "@FEDIAN_MONITORLOG"
					Where "U_Status" In ({0})and IsNull(Cast("U_Archivo_PDF" as Nvarchar(2500)), '') = ''</value>
            </setting>
            <setting name="FacturaExpo" serializeAs="String">
                <value />
            </setting>
            <setting name="FacturaConti" serializeAs="String">
                <value />
            </setting>
            <setting name="NotaDebito" serializeAs="String">
                <value />
            </setting>
            <setting name="Msginter" serializeAs="String">
                <value>
					Select * From [@FEDIAN_INTERF_ERR] Where IsNull(Cast(U_MsgExter as Nvarchar(2500)), '') = '{0}'
				</value>
            </setting>
            <setting name="cmbTipodoc" serializeAs="String">
                <value>
					Select * from [@FEDIAN_CODDOC] Order By Code
				</value>
            </setting>
            <setting name="cmbEstado" serializeAs="String">
                <value>
					Select U_Status, 
					Case 
					When U_Status = '1' Then 'Procesado' 
					When U_Status = '2' Then 'En Proceso' 
					When U_Status = '3' Then 'Error' 
					When U_Status = '10' Then 'Procesado'
					When U_Status = '102' Then 'Error'
					When U_Status = '106' Then 'Error' else 'En Proceso' End
					from [@FEDIAN_MONITORLOG]
					Where IsNull(U_Status,'') != ''
					Group By U_Status
					Order By U_Status
				</value>
            </setting>
            <setting name="ReSendAuto" serializeAs="String">
                <value>
					Select Code,U_DocNum,U_DocType, IsNull(Cast(U_Fecha_Envio as nvarchar(100)),'') as'U_Fecha_Envio'
					From [@FEDIAN_MONITORLOG] A0
					Where IsNull(U_Status,'') = '' or IsNull(U_Status,'') In ({0})
				</value>
            </setting>
            <setting name="MaxLog" serializeAs="String">
                <value>
					Select IsNull(Max(cast(Code as Int)),0)+1 As 'NextCode' From [@FEDIAN_MONITORLOG]
				</value>
            </setting>
            <setting name="impFac" serializeAs="String">
                <value />
            </setting>
            <setting name="impNC" serializeAs="String">
                <value />
            </setting>
        </AddOn_FE_DIAN.Querys>
    </applicationSettings>
    <userSettings>
        <AddOn_FE_DIAN.Querys>
            <setting name="impND" serializeAs="String">
                <value />
            </setting>
        </AddOn_FE_DIAN.Querys>
    </userSettings>
</configuration>