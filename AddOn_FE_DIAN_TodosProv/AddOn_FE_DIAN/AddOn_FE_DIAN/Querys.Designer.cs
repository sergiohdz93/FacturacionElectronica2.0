//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AddOn_FE_DIAN {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.8.0.0")]
    internal sealed partial class Querys : global::System.Configuration.ApplicationSettingsBase {
        
        private static Querys defaultInstance = ((Querys)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Querys())));
        
        public static Querys Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string NotaCredito {
            get {
                return ((string)(this["NotaCredito"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Select Cadena from (\r\n\t\t\t\t\tSelect 0 \'LineNum\', 1 as \'ordenplano\', Cadena from (\r\n" +
            "\t\t\t\t\tSelect \'ENC\' + \',\' + \'INVOIC\' + \',\' + \r\n\t\t\t\t\tCase When CharIndex(\'-\', A2.Ta" +
            "xIdNum) = 0 Then A2.TaxIdNum Else SubString(A2.TaxIdNum, 1, CharIndex(\'-\', A2.Ta" +
            "xIdNum)-1) End + \',\' + \r\n\t\t\t\t\tCase when CharIndex(\'-\', A1.LicTradNum) = 0 Then A" +
            "1.LicTradNum Else SubString(A1.LicTradNum, 1, CharIndex(\'-\', A1.LicTradNum)-1) E" +
            "nd \r\n\t\t\t\t\t+ \',\' + \'UBL 2.0\' + \',\' + \'DIAN 1.0\' + \',\' + IsNull(A3.BeginStr,\'\') + " +
            "Cast(A0.DocNum as Nvarchar(100)) + \',\' + \r\n\t\t\t\t\tConvert(char(10), A0.DocDate,126" +
            ") + \',\' + Convert(varchar(10), GETDATE(), 108) + \',\' + \'1\' + \',\' + Case When A0." +
            "DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' + \'\' + \',\' + \'\' + \',\' + \r\n\t\t\t\t\t" +
            "\'\' + \',\' + \'\' + \',\' + \'\' + \',\' + Convert(char(10), A0.DocDueDate,126) + \',\' + \'\'" +
            " + \',\' + \'\' As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0 \r\n\t\t\t\t\tInner Join OCRD A1 On A0.CardC" +
            "ode = A1.CardCode \r\n\t\t\t\t\tInner Join OADM A2 on 1 = 1 \r\n\t\t\t\t\tInner join NNM1 A3 O" +
            "n A0.Series = A3.Series\r\n\t\t\t\t\tWhere A0.DocEntry = {0} \r\n\r\n\t\t\t\t\tUnion All \r\n\r\n\t\t\t" +
            "\t\tSelect \'EMI\' + \',\' + \'1\' + \',\' + \r\n\t\t\t\t\tCase When CharIndex(\'-\', A0.TaxIdNum) " +
            "= 0 Then A0.TaxIdNum Else SubString(A0.TaxIdNum, 1, CharIndex(\'-\', A0.TaxIdNum)-" +
            "1) End \r\n\t\t\t\t\t+ \',\' + \'31\' + \',\' + \'0\' + \',\' + \'\' + \',\' + A0.PrintHeadr + \',\' +\r" +
            "\n\t\t\t\t\t\'\' + \',\' + \'\' + \',\' + \'\' + \',\' + IsNull(A1.Street,\'\') + \',\' + \'\' + \',\' + \'" +
            "\' + \',\' + IsNull(A1.City,\'\') + \',\' + \r\n\t\t\t\t\tIsNull(A1.County,\'\') + \',\' + IsNull(" +
            "A1.Country,\'\') + \',\' + \'\' \r\n\t\t\t\t\t+ \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \'" +
            ",\' + \'\'  As \'Cadena\'\r\n\t\t\t\t\tFrom OADM A0\r\n\t\t\t\t\tInner Join ADM1 A1 ON A0.Code= A1." +
            "Code\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \'CDE\' + \',\' + \'1\' + \',\' + IsNull(A0.Manage" +
            "r,\'\') + \',\' + IsNull(A0.Phone1,\'\') + \',\' + IsNull(A0.E_Mail,\'\') As \'Cadena\'\r\n\t\t\t" +
            "\t\tFrom OADM A0\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \'ORC\' + \',\' + IsNull(Cast(A2.Doc" +
            "Num as Nvarchar(100)),\'\')  + \',\' + \'\' + \',\' + \'\' + \',\' + IsNull(A0.NumAtCard,\'\')" +
            " As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tInner Join INV1 A1 On A0.DocEntry = A1.Doc" +
            "Entry\r\n\t\t\t\t\tLeft Join ORDR A2 On A2.DocEntry = A1.BaseEntry\r\n\t\t\t\t\tWhere A0.DocEn" +
            "try = {0}\r\n\t\t\t\t\tGroup By A0.NumAtCard, A2.DocNum\r\n\r\n\t\t\t\t\tUnion All \r\n\r\n\t\t\t\t\tSele" +
            "ct \'ADQ\' + \',\' + Case When A1.U_HBT_TipEnt = \'1\' Then \'2\' When A1.U_HBT_TipEnt =" +
            " \'2\' Then \'1\' Else \'1\' End+ \',\' + \r\n\t\t\t\t\tCase When CharIndex(\'-\', A1.LicTradNum)" +
            " = 0 Then A1.LicTradNum Else SubString(A1.LicTradNum, 1, CharIndex(\'-\', A1.LicTr" +
            "adNum)-1) End \r\n\t\t\t\t\t+ \',\' + IsNull(A1.U_HBT_TipDoc,\'\')  + \',\' + Case When A1.U_" +
            "HBT_RegTrib = \'RS\' Then \'0\' When A1.U_HBT_RegTrib = \'RC\' Then \'2\' Else \'2\' End \r" +
            "\n\t\t\t\t\t+ \',\' + \'\' + \',\' + Case When A1.U_HBT_TipEnt = \'2\' Then IsNull(A1.CardName" +
            ",\'\') Else \'\' End + \',\' + IsNull(A1.CardName,\'\') + \',\' + \r\n\t\t\t\t\tCase When A1.U_HB" +
            "T_TipEnt = \'1\' Then IsNull(A1.U_HBT_Nombres,\'\') Else \'\' End + \',\' +\r\n\t\t\t\t\tCase W" +
            "hen A1.U_HBT_TipEnt = \'1\' Then IsNull(A1.U_HBT_Apellido1,\'\') + \' \' + IsNull(A1.U" +
            "_HBT_Apellido2,\'\') Else \'\' End + \',\' + \r\n\t\t\t\t\tIsNull(A1.Address,\'\') + \',\' + \r\n\t\t" +
            "\t\t\tIsNull(A1.State1,\'\') + \',\' + IsNull(A1.U_HBT_MunMed,\'\') + \',\' + IsNull(A1.Cit" +
            "y,\'\') + \',\' + IsNull(A1.ZipCode,\'\') + \',\' + IsNull(A1.Country,\'\') + \',\' + \'\' \r\n\t" +
            "\t\t\t\t+ \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\'  As \'Cadena\'\r\n\t\t\t\t\tFr" +
            "om OINV A0 \r\n\t\t\t\t\tInner Join OCRD A1 On A0.CardCode = A1.CardCode \r\n\t\t\t\t\tWhere A" +
            "0.DocEntry = {0}\r\n\r\n\t\t\t\t\tUnion All \r\n\r\n\t\t\t\t\tSelect \'TOT\' + \',\' + \r\n\t\t\t\t\tCast(Cas" +
            "t(Sum(A1.Linetotal) as decimal (14,0)) as Nvarchar(100)) + \',\' + Case When A0.Do" +
            "cCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' + \r\n\t\t\t\t\tCast(Cast(A0.BaseAmnt as" +
            " decimal (14,0)) as Nvarchar(100)) + \',\' + Case When A0.DocCur = \'$\' Then \'COP\' " +
            "Else A0.DocCur End + \',\' + \r\n\t\t\t\t\tCast(Cast(A0.DocTotal as decimal (14,0)) as Nv" +
            "archar(100)) + \',\' + Case When A0.DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \'" +
            ",\' + \r\n\t\t\t\t\tCast(Cast(Sum(A1.Linetotal)-A0.DiscSum+A0.VatSum as decimal (14,0)) " +
            "as Nvarchar(100)) + \',\' + Case When A0.DocCur = \'$\' Then \'COP\' Else A0.DocCur En" +
            "d + \',\' + \r\n\t\t\t\t\tCast(Cast(A0.DiscSum as decimal (14,0)) as Nvarchar(100)) + \',\'" +
            " + Case When A0.DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' + \r\n\t\t\t\t\tCast(C" +
            "ast(A0.VatSum as decimal (14,0)) as Nvarchar(100)) + \',\' + Case When A0.DocCur =" +
            " \'$\' Then \'COP\' Else A0.DocCur End + \',\' + \r\n\t\t\t\t\tCast(Cast(A0.DpmAmnt as decima" +
            "l (14,0)) as Nvarchar(100)) + \',\' + Case When A0.DocCur = \'$\' Then \'COP\' Else A0" +
            ".DocCur End  As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tInner Join INV1 A1 On A0.DocEn" +
            "try = A1.DocEntry\r\n\t\t\t\t\tWhere A0.DocEntry = {0}\r\n\t\t\t\t\tGroup By A0.DocCur, A0.Bas" +
            "eAmnt, A0.DocTotal, A0.DiscSum, A0.VatSum, A0.DpmAmnt\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\t" +
            "Select \'TIM\' + \',\' + \'false\' + \',\' + \r\n\t\t\t\t\tCast(Cast(A0.VatSum as decimal (14,0" +
            ")) as Nvarchar(100))  + \',\' + Case When A0.DocCur = \'$\' Then \'COP\' Else A0.DocCu" +
            "r End As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tWhere A0.DocEntry = {0} And IsNull(A0" +
            ".VatSum ,0) != 0\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \'IMP\' + \',\' + \'01\' + \',\' + \r\n\t" +
            "\t\t\t\tCast(Cast(Sum(A0.VatSum) as decimal (14,0)) as Nvarchar(100)) + \',\' + \r\n\t\t\t\t" +
            "\tCase When A0.DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' +\r\n\t\t\t\t\tCast(Cast" +
            "(Sum(A0.VatSum) as decimal (14,0)) as Nvarchar(100)) + \',\' +\r\n\t\t\t\t\tCase When A0." +
            "DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' + Cast(Cast(A0.VatPercent as de" +
            "cimal (14,2)) as Nvarchar(100)) As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tWhere A0.Do" +
            "cEntry = {0} And IsNull(A0.VatSum ,0) != 0\r\n\t\t\t\t\tGroup By A0.DocCur, A0.VatPerce" +
            "nt\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \'TIM\' + \',\' + \'true\' + \',\' + \r\n\t\t\t\t\tCast(Cas" +
            "t(Sum(A1.WTAmnt) as decimal (14,0)) as Nvarchar(100)) + \',\' + \r\n\t\t\t\t\tCase When A" +
            "0.DocCur = \'$\' Then \'COP\' Else A0.DocCur End As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t" +
            "\t\tInner Join INV5 A1 ON A0.DocEntry = A1.AbsEntry \r\n\t\t\t\t\tInner Join OWHT A2 On A" +
            "1.WTCode = A2.WTCode\r\n\t\t\t\t\tWhere A2.U_HBT_TipoAutoRet = \'1\' And IsNull(A1.WTAmnt" +
            ",0) != 0 And A0.DocEntry = {0}\r\n\t\t\t\t\tGroup By A0.DocEntry, A0.DocCur\r\n\r\n\t\t\t\t\tUni" +
            "on All\r\n\r\n\t\t\t\t\tSelect \'IMP\' + \',\' + \'03\' + \',\' + \r\n\t\t\t\t\tCast(Cast(Sum(IsNull(A1." +
            "U_Base_ML,0)) as decimal (14,0)) as Nvarchar(100)) + \',\' + \r\n\t\t\t\t\tCase When A0.D" +
            "ocCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' +\r\n\t\t\t\t\tCast(Cast(Sum(IsNull(A1." +
            "WTAmnt,0)) as decimal (14,0)) as Nvarchar(100)) + \',\' +\r\n\t\t\t\t\tCase When A0.DocCu" +
            "r = \'$\' Then \'COP\' Else A0.DocCur End + \',\' + \r\n\t\t\t\t\tCast(Cast(IsNull(A1.U_Tarif" +
            "a,0) as decimal (14,2)) as Nvarchar(100)) As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tI" +
            "nner Join INV5 A1 ON A0.DocEntry = A1.AbsEntry \r\n\t\t\t\t\tInner Join OWHT A2 On A1.W" +
            "TCode = A2.WTCode\r\n\t\t\t\t\tWhere A2.U_HBT_TipoAutoRet = \'1\' And IsNull(A1.WTAmnt,0)" +
            " != 0 And A0.DocEntry = {0}\r\n\t\t\t\t\tGroup By A0.DocEntry, A0.DocCur, A1.U_Tarifa\r\n" +
            "\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \'TIM\' + \',\' + \'true\' + \',\' + \r\n\t\t\t\t\tCast(Cast(Su" +
            "m(A1.WTAmnt) as decimal (14,0)) as Nvarchar(100)) + \',\' + \r\n\t\t\t\t\tCase When A0.Do" +
            "cCur = \'$\' Then \'COP\' Else A0.DocCur End As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tIn" +
            "ner Join INV5 A1 ON A0.DocEntry = A1.AbsEntry \r\n\t\t\t\t\tInner Join OWHT A2 On A1.WT" +
            "Code = A2.WTCode\r\n\t\t\t\t\tWhere A2.U_HBT_TipoAutoRet = \'2\' And IsNull(A1.WTAmnt,0) " +
            "!= 0 And A0.DocEntry = {0}\r\n\t\t\t\t\tGroup By A0.DocEntry, A0.DocCur\r\n\r\n\t\t\t\t\tUnion A" +
            "ll\r\n\r\n\t\t\t\t\tSelect \'IMP\' + \',\' + \'01\' + \',\' + \r\n\t\t\t\t\tCast(Cast(Sum(A1.U_Base_ML) " +
            "as decimal (14,0)) as Nvarchar(100)) + \',\' + \r\n\t\t\t\t\tCase When A0.DocCur = \'$\' Th" +
            "en \'COP\' Else A0.DocCur End + \',\' +\r\n\t\t\t\t\tCast(Cast(Sum(A1.WTAmnt) as decimal (1" +
            "4,0)) as Nvarchar(100)) + \',\' +\r\n\t\t\t\t\tCase When A0.DocCur = \'$\' Then \'COP\' Else " +
            "A0.DocCur End + \',\' + Cast(Cast(A1.U_Tarifa as decimal (14,2)) as Nvarchar(100))" +
            " As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tInner Join INV5 A1 ON A0.DocEntry = A1.Abs" +
            "Entry \r\n\t\t\t\t\tInner Join OWHT A2 On A1.WTCode = A2.WTCode\r\n\t\t\t\t\tWhere A2.U_HBT_Ti" +
            "poAutoRet = \'2\' And IsNull(A1.WTAmnt,0) != 0 And A0.DocEntry = {0}\r\n\t\t\t\t\tGroup B" +
            "y A0.DocEntry, A0.DocCur, A1.U_Tarifa\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \'DRF\' + \'" +
            ",\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + IsNull(A1.BeginStr,\'\') + \',\' + \r\n\t\t\t\t\tCast" +
            "(Cast(A1.InitialNum as int) as Nvarchar(100)) + \',\' + Cast(Cast(A1.LastNum as in" +
            "t) as Nvarchar(100))\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tInner join NNM1 A1 On A0.Series = " +
            "A1.Series\r\n\t\t\t\t\tWhere A0.DocEntry = {0}\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \r\n\t\t\t\t\t" +
            "\'NOT,1_ LA PRESENTE FACTURA DE VENTA SE ASIMILA PARA TODOS LOS EFECTOS DE UNA LE" +
            "TRA DE CAMBIO DE CONFORMIDAD CON LOS ARTÍCULOS 770 Y 774 DEL CÓDIGO DEL COMERCIO" +
            "\' + \'|\' + \r\n\t\t\t\t\t\'DEVOLUCIONES AUTORIZADAS POR EL VENDEDOR PREVIAMENTE OCASIONAR" +
            "AN UNA PENALIZACIÓN DEL 20% SOBRE EL VALOR FACTURADO. \' + \'|\' +\r\n\t\t\t\t\t\'RESOLUCIÓ" +
            "N DIAN No. 123456768 FACTURACIÓN DESDE BIO2300023 HASTA BIO2300999 DE MES, DIA, " +
            "AÑO\' As \'Cadena\'\r\n\t\t\t\t\tFrom OADM A0\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \r\n\t\t\t\t\t\'NOT" +
            ",2_ La mercancía viaja por cuenta y riesgo del comprador. El vendedor se reserva" +
            " el derecho de dominio sobre la mercancía hasta su pago total. Con esta firma el" +
            " comprador declara haber recibido a satisfacción real y materialmente las mercan" +
            "cías descritas en este documento\' As \'Cadena\'\r\n\t\t\t\t\tFrom OADM A0\r\n\r\n\t\t\t\t\tUnion A" +
            "ll\r\n\r\n\t\t\t\t\tSelect \r\n\t\t\t\t\t\'NOT,4_ SOMOS GRANDES CONTRIBUYENTES RES. 000076 DE DIC" +
            " 01 DE 2016\' + \'|\' + \r\n\t\t\t\t\t\'SOMOS GRANDES CONTRIBUYENTES SHD RES. DDI-042065 DE" +
            " OCT DE 2017\' + \'|\' +\t\t\t\t\t\r\n\t\t\t\t\t\'ÉSTA FACTURA CAUSARÁ INTERESES MORATORIOS DE A" +
            "CUERDO A LOS MONTOS AUTORIZADOS POR LA LEY\' + \'|\' + \r\n\t\t\t\t\t\'AUTORETENEDOR RENTA " +
            "- Resolución #008543 Agosto 13 2009\' As \'Cadena\'\r\n\t\t\t\t\tFrom OADM A0\r\n\r\n\t\t\t\t\tUnio" +
            "n All\r\n\r\n\t\t\t\t\tSelect \r\n\t\t\t\t\t\'NOT,5_ ACTIVIDAD COMERCIAL 4659 - TARIFA 11.04 x 10" +
            "00\' + \'|\' + \r\n\t\t\t\t\t\'IVA REGIMEN COMUN - AUTORRETENEDOR RENTA RESOLUCION No. 0085" +
            "43 DE 08/13/09\' As \'Cadena\'\r\n\t\t\t\t\tFrom OADM A0\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect " +
            "\'NOT,6_ \' + A1.SlpName  As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tInner Join OSLP A1 " +
            "On A0.SlpCode = A1.SlpCode\r\n\t\t\t\t\tWhere A0.DocEntry = {0} And A0.SlpCode != -1\r\n\r" +
            "\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \r\n\t\t\t\t\t\'NOT,7_ IVA RÉGIMEN COMÚN\' + \'|\' + A1.Intr" +
            "ntAdrs As \'Cadena\'\r\n\t\t\t\t\tFrom OADM A0\r\n\t\t\t\t\tInner Join ADM1 A1 ON A0.Code= A1.Co" +
            "de\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \'NOT,12_ \' + REPLACE(REPLACE(REPLACE(Cast(Is" +
            "Null(A0.Comments,\'\') as Nvarchar(max)),CHAR(10),\' \'),CHAR(13),\' \'), \',\', \';\') As" +
            " \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n\t\t\t\t\tInner Join OADM A1 On 1 =1 \r\n\t\t\t\t\tWhere A0.Do" +
            "cEntry = {0} And IsNull(A0.Comments,\'\') != \'\'\r\n\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect" +
            " \'NOT,14_ \' + A0.LicTradNum + \'|\' + A1.TaxIdNum As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0\r\n" +
            "\t\t\t\t\tInner Join OADM A1 On 1 =1 \r\n\t\t\t\t\tWhere A0.DocEntry = {0}\r\n\r\n\t\t\t\t\tUnion All" +
            "\r\n\r\n\t\t\t\t\tSelect \'OVT\' + \',\' + \'01C\' + \',\' + Cast(Cast(Sum(A1.WTAmnt) as decimal " +
            "(14,0)) as Nvarchar(100)) + \',\' + \r\n\t\t\t\t\tCase When A0.DocCur = \'$\' Then \'COP\' El" +
            "se A0.DocCur End + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' As \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0" +
            "\r\n\t\t\t\t\tInner Join INV5 A1 ON A0.DocEntry = A1.AbsEntry \r\n\t\t\t\t\tInner Join OWHT A2" +
            " On A1.WTCode = A2.WTCode\r\n\t\t\t\t\tWhere A2.U_HBT_TipoAutoRet = \'4\' And A2.U_HBT_Ti" +
            "pRet != \'0\' And IsNull(A1.WTAmnt,0) != 0 And A0.DocEntry = {0}\r\n\t\t\t\t\tGroup By A0" +
            ".DocEntry, A0.DocCur\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect \'CTS\' + \',\' + \'BIOT01\' + \'" +
            ",\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\'\r\n\t\t\t\t\t" +
            "From OADM\r\n\t\t\t\t\t)T0\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect A1.LineNum, 2 as \'ordenplan" +
            "o\', \'ITE\' + \',\' + Cast(A1.LineNum+1 as Nvarchar(100)) + \',\' + \'false\' + \',\' + \r\n" +
            "\t\t\t\t\tCast(Cast(A1.Quantity as decimal (14,0)) as Nvarchar(100)) + \',\' + \'\' + \',\'" +
            " + \r\n\t\t\t\t\tCast(Cast(A1.LineTotal as decimal (14,0)) as Nvarchar(100)) + \',\' + Ca" +
            "se When A0.DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' + \r\n\t\t\t\t\tCast(Cast(A" +
            "1.LineTotal/A1.Quantity as decimal (14,0)) as Nvarchar(100)) + \',\' + Case When A" +
            "0.DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' + \r\n\t\t\t\t\tA1.ItemCode  + \',\' +" +
            " \'\' + \',\' + Replace(A1.Dscription,\',\',\'.\') + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \'," +
            "\' + \'\' + \',\' + \r\n\t\t\t\t\t\'\' + \',\' + \'\' + \',\' + A1.ItemCode + \',\' + \'\' + \',\' + \'\' + " +
            "\',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' + \',\' + \'\' as \'C" +
            "adena\'\r\n\t\t\t\t\tFrom OINV A0 \r\n\t\t\t\t\tInner Join INV1 A1 On A0.DocEntry = A1.DocEntry" +
            " \r\n\t\t\t\t\tInner Join OITM A2 On A1.ItemCode = A2.ItemCode \r\n\t\t\t\t\tWhere A0.DocEntry" +
            " = {0}\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect A1.LineNum, 3 as \'ordenplano\', \'TII\' + \'" +
            ",\' + Cast(Cast(A2.TaxSum as decimal (14,0)) as Nvarchar(100)) + \',\' + \r\n\t\t\t\t\tCas" +
            "e When A0.DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' + \'false\'\r\n\t\t\t\t\tFrom " +
            "OINV A0 \r\n\t\t\t\t\tInner Join INV1 A1 On A0.DocEntry = A1.DocEntry\r\n\t\t\t\t\tInner Join " +
            "INV4 A2 On A1.DocEntry = A2.DocEntry And A1.LineNum = A2.LineNum\r\n\t\t\t\t\tWhere A0." +
            "DocEntry = {0} And A2.ExpnsCode = -1\r\n\t\t\t\t\tGroup By A0.DocEntry, A0.DocCur, A2.T" +
            "axSum, A1.LineNum\r\n\r\n\t\t\t\t\tUnion All\r\n\r\n\t\t\t\t\tSelect A1.LineNum, 4 as \'ordenplano\'" +
            ", \'IIM\' + \',\' + \'01\' + \',\' + Cast(Cast(A2.TaxSum as decimal (14,0)) as Nvarchar(" +
            "100)) + \',\' + \r\n\t\t\t\t\tCase When A0.DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \'" +
            ",\' + Cast(Cast(A2.BaseSum as decimal (14,0)) as Nvarchar(100)) + \r\n\t\t\t\t\t\',\' + Ca" +
            "se When A0.DocCur = \'$\' Then \'COP\' Else A0.DocCur End + \',\' + Cast(Cast(A2.TaxRa" +
            "te as decimal (14,2)) as Nvarchar(100)) as \'Cadena\'\r\n\t\t\t\t\tFrom OINV A0 \r\n\t\t\t\t\tIn" +
            "ner Join INV1 A1 On A0.DocEntry = A1.DocEntry\r\n\t\t\t\t\tInner Join INV4 A2 On A1.Doc" +
            "Entry = A2.DocEntry And A1.LineNum = A2.LineNum\r\n\t\t\t\t\tWhere A0.DocEntry = {0} An" +
            "d A2.ExpnsCode = -1\r\n\t\t\t\t\tGroup By A0.DocEntry, A0.DocCur, A2.BaseSum, A2.TaxRat" +
            "e, A2.TaxSum, A1.LineNum\r\n\t\t\t\t\t)C0 Order by LineNum, ordenplano;")]
        public string FacturaVenta {
            get {
                return ((string)(this["FacturaVenta"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
					Select 
					A0.Code, A0.U_ObjType as 'Tipo Objeto', A0.U_DocType as 'Tipo Documento', A1.Name as 'Documento DIAN', A0.U_Folio as 'Numero Documento', A0.U_DocNum as 'Numero Interno', 
					A0.U_Status as 'Codigo Estado', A0.U_Resultado as 'Descripcion Estado', A0.U_ProcessID as 'ID Proceso', A0.U_Fecha_Envio as 'Fecha Envio', A0.U_Hora_Envio as 'Hora Envio', 
					A0.U_Usuario_Envio as 'Usuario Envio', A0.U_Fecha_ReEnvio as 'Fecha Re-Envio', A0.U_Hora_ReEnvio as 'Hora Re-Envio', A0.U_Usuario_ReEnvio as 'Usuario Re-Envio', 
					A0.U_Det_Peticion as 'Detalle Peticion', A0.U_Respuesta_Int as 'Respuesta Integracion', A0.U_Archivo_PDF as 'Archivo PDF', A0.U_Enlace_XML as 'Archivo XML'
					From [@FEDIAN_MONITORLOG] A0
					Left Join [@FEDIAN_CODDOC] A1 On A0.U_DocType = A1.Code
					Where (A0.U_Fecha_Envio Between '{0}' and '{1}' or IsNull(A0.U_Fecha_Envio,'') = '') and (A0.U_DocType = '{2}' OR IsNull('{2}','')='') and (A0.U_Status = '{3}' OR IsNull('{3}','')='')
					Order By Cast(A0.Code as int)
				")]
        public string CargueMonitor {
            get {
                return ((string)(this["CargueMonitor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\tSelect * from [@FEDIAN_PARAMG]\r\n\t\t\t\t")]
        public string PARAMG {
            get {
                return ((string)(this["PARAMG"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\tSelect Code From [@FEDIAN_MONITORLOG] Where U_DocNum = {0}\r\n\t\t\t\t")]
        public string GetCodeLog {
            get {
                return ((string)(this["GetCodeLog"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\tSelect Code, U_ProcessID, U_ID_Seguimiento, U_Det_Peticion \r\n\t\t\t\t\tFrom [@F" +
            "EDIAN_MONITORLOG] \r\n\t\t\t\t\tWhere U_Status in ({0}) and IsNull(Cast(U_Archivo_PDF a" +
            "s Nvarchar(2500)), \'\') = \'\'\r\n\t\t\t\t")]
        public string ProcessStatus {
            get {
                return ((string)(this["ProcessStatus"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string FacturaExpo {
            get {
                return ((string)(this["FacturaExpo"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string FacturaConti {
            get {
                return ((string)(this["FacturaConti"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string NotaDebito {
            get {
                return ((string)(this["NotaDebito"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\tSelect * From [@FEDIAN_INTERF_ERR] Where IsNull(Cast(U_MsgExter as Nvarcha" +
            "r(2500)), \'\') = \'{0}\'\r\n\t\t\t\t")]
        public string Msginter {
            get {
                return ((string)(this["Msginter"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\tSelect * from [@FEDIAN_CODDOC] Order By Code\r\n\t\t\t\t")]
        public string cmbTipodoc {
            get {
                return ((string)(this["cmbTipodoc"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"
					Select U_Status, 
					Case 
					When U_Status = '1' Then 'Procesado' 
					When U_Status = '2' Then 'En Proceso' 
					When U_Status = '3' Then 'Error' 
					When U_Status = '10' Then 'Procesado'
					When U_Status = '102' Then 'Error'
					When U_Status = '106' Then 'Error' else 'En Proceso' End
					from [@FEDIAN_MONITORLOG]
					Where IsNull(U_Status,'') != ''
					Group By U_Status
					Order By U_Status
				")]
        public string cmbEstado {
            get {
                return ((string)(this["cmbEstado"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\tSelect Code,U_DocNum,U_DocType, IsNull(Cast(U_Fecha_Envio as nvarchar(100)" +
            "),\'\') as\'U_Fecha_Envio\'\r\n\t\t\t\t\tFrom [@FEDIAN_MONITORLOG] A0\r\n\t\t\t\t\tWhere IsNull(U_" +
            "Status,\'\') = \'\' or IsNull(U_Status,\'\') In ({0})\r\n\t\t\t\t")]
        public string ReSendAuto {
            get {
                return ((string)(this["ReSendAuto"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n\t\t\t\t\tSelect IsNull(Max(cast(Code as Int)),0)+1 As \'NextCode\' From [@FEDIAN_MONI" +
            "TORLOG]\r\n\t\t\t\t")]
        public string MaxLog {
            get {
                return ((string)(this["MaxLog"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string impFac {
            get {
                return ((string)(this["impFac"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string impNC {
            get {
                return ((string)(this["impNC"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string impND {
            get {
                return ((string)(this["impND"]));
            }
            set {
                this["impND"] = value;
            }
        }
    }
}
